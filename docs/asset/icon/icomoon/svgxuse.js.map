{
  "version": 3,
  "sources": ["../../../../docs-src/asset/icon/icomoon/svgxuse.js"],
  "sourcesContent": ["/*!\n * @copyright Copyright (c) 2017 IcoMoon.io\n * @license   Licensed under MIT license\n *            See https://github.com/Keyamoon/svgxuse\n * @version   1.2.6\n */\n/*jslint browser: true */\n/*global XDomainRequest, MutationObserver, window */\n(function () {\n    \"use strict\";\n    if (typeof window !== \"undefined\" && window.addEventListener) {\n        var cache = Object.create(null); // holds xhr objects to prevent multiple requests\n        var checkUseElems;\n        var tid; // timeout id\n        var debouncedCheck = function () {\n            clearTimeout(tid);\n            tid = setTimeout(checkUseElems, 100);\n        };\n        var unobserveChanges = function () {\n            return;\n        };\n        var observeChanges = function () {\n            var observer;\n            window.addEventListener(\"resize\", debouncedCheck, false);\n            window.addEventListener(\"orientationchange\", debouncedCheck, false);\n            if (window.MutationObserver) {\n                observer = new MutationObserver(debouncedCheck);\n                observer.observe(document.documentElement, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true\n                });\n                unobserveChanges = function () {\n                    try {\n                        observer.disconnect();\n                        window.removeEventListener(\"resize\", debouncedCheck, false);\n                        window.removeEventListener(\"orientationchange\", debouncedCheck, false);\n                    } catch (ignore) {}\n                };\n            } else {\n                document.documentElement.addEventListener(\"DOMSubtreeModified\", debouncedCheck, false);\n                unobserveChanges = function () {\n                    document.documentElement.removeEventListener(\"DOMSubtreeModified\", debouncedCheck, false);\n                    window.removeEventListener(\"resize\", debouncedCheck, false);\n                    window.removeEventListener(\"orientationchange\", debouncedCheck, false);\n                };\n            }\n        };\n        var createRequest = function (url) {\n            // In IE 9, cross origin requests can only be sent using XDomainRequest.\n            // XDomainRequest would fail if CORS headers are not set.\n            // Therefore, XDomainRequest should only be used with cross origin requests.\n            function getOrigin(loc) {\n                var a;\n                if (loc.protocol !== undefined) {\n                    a = loc;\n                } else {\n                    a = document.createElement(\"a\");\n                    a.href = loc;\n                }\n                return a.protocol.replace(/:/g, \"\") + a.host;\n            }\n            var Request;\n            var origin;\n            var origin2;\n            if (window.XMLHttpRequest) {\n                Request = new XMLHttpRequest();\n                origin = getOrigin(location);\n                origin2 = getOrigin(url);\n                if (Request.withCredentials === undefined && origin2 !== \"\" && origin2 !== origin) {\n                    Request = XDomainRequest || undefined;\n                } else {\n                    Request = XMLHttpRequest;\n                }\n            }\n            return Request;\n        };\n        var xlinkNS = \"http://www.w3.org/1999/xlink\";\n        checkUseElems = function () {\n            var base;\n            var bcr;\n            var fallback = \"\"; // optional fallback URL in case no base path to SVG file was given and no symbol definition was found.\n            var hash;\n            var href;\n            var i;\n            var inProgressCount = 0;\n            var isHidden;\n            var Request;\n            var url;\n            var uses;\n            var xhr;\n            function observeIfDone() {\n                // If done with making changes, start watching for chagnes in DOM again\n                inProgressCount -= 1;\n                if (inProgressCount === 0) { // if all xhrs were resolved\n                    unobserveChanges(); // make sure to remove old handlers\n                    observeChanges(); // watch for changes to DOM\n                }\n            }\n            function attrUpdateFunc(spec) {\n                return function () {\n                    if (cache[spec.base] !== true) {\n                        spec.useEl.setAttributeNS(xlinkNS, \"xlink:href\", \"#\" + spec.hash);\n                        if (spec.useEl.hasAttribute(\"href\")) {\n                            spec.useEl.setAttribute(\"href\", \"#\" + spec.hash);\n                        }\n                    }\n                };\n            }\n            function onloadFunc(xhr) {\n                return function () {\n                    var body = document.body;\n                    var x = document.createElement(\"x\");\n                    var svg;\n                    xhr.onload = null;\n                    x.innerHTML = xhr.responseText;\n                    svg = x.getElementsByTagName(\"svg\")[0];\n                    if (svg) {\n                        svg.setAttribute(\"aria-hidden\", \"true\");\n                        svg.style.position = \"absolute\";\n                        svg.style.width = 0;\n                        svg.style.height = 0;\n                        svg.style.overflow = \"hidden\";\n                        body.insertBefore(svg, body.firstChild);\n                    }\n                    observeIfDone();\n                };\n            }\n            function onErrorTimeout(xhr) {\n                return function () {\n                    xhr.onerror = null;\n                    xhr.ontimeout = null;\n                    observeIfDone();\n                };\n            }\n            unobserveChanges(); // stop watching for changes to DOM\n            // find all use elements\n            uses = document.getElementsByTagName(\"use\");\n            for (i = 0; i < uses.length; i += 1) {\n                try {\n                    bcr = uses[i].getBoundingClientRect();\n                } catch (ignore) {\n                    // failed to get bounding rectangle of the use element\n                    bcr = false;\n                }\n                href = uses[i].getAttribute(\"href\")\n                        || uses[i].getAttributeNS(xlinkNS, \"href\")\n                        || uses[i].getAttribute(\"xlink:href\");\n                if (href && href.split) {\n                    url = href.split(\"#\");\n                } else {\n                    url = [\"\", \"\"];\n                }\n                base = url[0];\n                hash = url[1];\n                isHidden = bcr && bcr.left === 0 && bcr.right === 0 && bcr.top === 0 && bcr.bottom === 0;\n                if (bcr && bcr.width === 0 && bcr.height === 0 && !isHidden) {\n                    // the use element is empty\n                    // if there is a reference to an external SVG, try to fetch it\n                    // use the optional fallback URL if there is no reference to an external SVG\n                    if (fallback && !base.length && hash && !document.getElementById(hash)) {\n                        base = fallback;\n                    }\n                    if (uses[i].hasAttribute(\"href\")) {\n                        uses[i].setAttributeNS(xlinkNS, \"xlink:href\", href);\n                    }\n                    if (base.length) {\n                        // schedule updating xlink:href\n                        xhr = cache[base];\n                        if (xhr !== true) {\n                            // true signifies that prepending the SVG was not required\n                            setTimeout(attrUpdateFunc({\n                                useEl: uses[i],\n                                base: base,\n                                hash: hash\n                            }), 0);\n                        }\n                        if (xhr === undefined) {\n                            Request = createRequest(base);\n                            if (Request !== undefined) {\n                                xhr = new Request();\n                                cache[base] = xhr;\n                                xhr.onload = onloadFunc(xhr);\n                                xhr.onerror = onErrorTimeout(xhr);\n                                xhr.ontimeout = onErrorTimeout(xhr);\n                                xhr.open(\"GET\", base);\n                                xhr.send();\n                                inProgressCount += 1;\n                            }\n                        }\n                    }\n                } else {\n                    if (!isHidden) {\n                        if (cache[base] === undefined) {\n                            // remember this URL if the use element was not empty and no request was sent\n                            cache[base] = true;\n                        } else if (cache[base].onload) {\n                            // if it turns out that prepending the SVG is not necessary,\n                            // abort the in-progress xhr.\n                            cache[base].abort();\n                            delete cache[base].onload;\n                            cache[base] = true;\n                        }\n                    } else if (base.length && cache[base]) {\n                        setTimeout(attrUpdateFunc({\n                            useEl: uses[i],\n                            base: base,\n                            hash: hash\n                        }), 0);\n                    }\n                }\n            }\n            uses = \"\";\n            inProgressCount += 1;\n            observeIfDone();\n        };\n        var winLoad;\n        winLoad = function () {\n            window.removeEventListener(\"load\", winLoad, false); // to prevent memory leaks\n            tid = setTimeout(checkUseElems, 0);\n        };\n        if (document.readyState !== \"complete\") {\n            // The load event fires when all resources have finished loading, which allows detecting whether SVG use elements are empty.\n            window.addEventListener(\"load\", winLoad, false);\n        } else {\n            // No need to add a listener if the document is already loaded, initialize immediately.\n            winLoad();\n        }\n    }\n}());\n"],
  "mappings": "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",
  "names": ["xhr"]
}
